#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetsRUs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="petsrus")]
	public partial class petsrusDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdoptionStatus(AdoptionStatus instance);
    partial void UpdateAdoptionStatus(AdoptionStatus instance);
    partial void DeleteAdoptionStatus(AdoptionStatus instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertPet(Pet instance);
    partial void UpdatePet(Pet instance);
    partial void DeletePet(Pet instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStockSupply(StockSupply instance);
    partial void UpdateStockSupply(StockSupply instance);
    partial void DeleteStockSupply(StockSupply instance);
    partial void InsertPetSupply(PetSupply instance);
    partial void UpdatePetSupply(PetSupply instance);
    partial void DeletePetSupply(PetSupply instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    #endregion
		
		public petsrusDataContext() : 
				base(global::PetsRUs.Properties.Settings.Default.petsrusConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public petsrusDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petsrusDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petsrusDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public petsrusDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdoptionStatus> AdoptionStatus
		{
			get
			{
				return this.GetTable<AdoptionStatus>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Pet> Pets
		{
			get
			{
				return this.GetTable<Pet>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<StockSupply> StockSupplies
		{
			get
			{
				return this.GetTable<StockSupply>();
			}
		}
		
		public System.Data.Linq.Table<PetSupply> PetSupplies
		{
			get
			{
				return this.GetTable<PetSupply>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdoptionStatus")]
	public partial class AdoptionStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdoptionStatus_ID;
		
		private string _AdoptionStatus_Desc;
		
		private EntitySet<Pet> _Pets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdoptionStatus_IDChanging(string value);
    partial void OnAdoptionStatus_IDChanged();
    partial void OnAdoptionStatus_DescChanging(string value);
    partial void OnAdoptionStatus_DescChanged();
    #endregion
		
		public AdoptionStatus()
		{
			this._Pets = new EntitySet<Pet>(new Action<Pet>(this.attach_Pets), new Action<Pet>(this.detach_Pets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdoptionStatus_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdoptionStatus_ID
		{
			get
			{
				return this._AdoptionStatus_ID;
			}
			set
			{
				if ((this._AdoptionStatus_ID != value))
				{
					this.OnAdoptionStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._AdoptionStatus_ID = value;
					this.SendPropertyChanged("AdoptionStatus_ID");
					this.OnAdoptionStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdoptionStatus_Desc", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AdoptionStatus_Desc
		{
			get
			{
				return this._AdoptionStatus_Desc;
			}
			set
			{
				if ((this._AdoptionStatus_Desc != value))
				{
					this.OnAdoptionStatus_DescChanging(value);
					this.SendPropertyChanging();
					this._AdoptionStatus_Desc = value;
					this.SendPropertyChanged("AdoptionStatus_Desc");
					this.OnAdoptionStatus_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdoptionStatus_Pet", Storage="_Pets", ThisKey="AdoptionStatus_ID", OtherKey="AdoptionStatus_ID")]
		public EntitySet<Pet> Pets
		{
			get
			{
				return this._Pets;
			}
			set
			{
				this._Pets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.AdoptionStatus = this;
		}
		
		private void detach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.AdoptionStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customer_ID;
		
		private string _Customer_Name;
		
		private string _Contact_Number;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Pet> _Pets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomer_IDChanging(string value);
    partial void OnCustomer_IDChanged();
    partial void OnCustomer_NameChanging(string value);
    partial void OnCustomer_NameChanged();
    partial void OnContact_NumberChanging(string value);
    partial void OnContact_NumberChanged();
    #endregion
		
		public Customer()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Pets = new EntitySet<Pet>(new Action<Pet>(this.attach_Pets), new Action<Pet>(this.detach_Pets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Name", DbType="VarChar(255)")]
		public string Customer_Name
		{
			get
			{
				return this._Customer_Name;
			}
			set
			{
				if ((this._Customer_Name != value))
				{
					this.OnCustomer_NameChanging(value);
					this.SendPropertyChanging();
					this._Customer_Name = value;
					this.SendPropertyChanged("Customer_Name");
					this.OnCustomer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Number", DbType="VarChar(255)")]
		public string Contact_Number
		{
			get
			{
				return this._Contact_Number;
			}
			set
			{
				if ((this._Contact_Number != value))
				{
					this.OnContact_NumberChanging(value);
					this.SendPropertyChanging();
					this._Contact_Number = value;
					this.SendPropertyChanged("Contact_Number");
					this.OnContact_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="Customer_ID", OtherKey="Customer_ID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Pet", Storage="_Pets", ThisKey="Customer_ID", OtherKey="Customer_ID")]
		public EntitySet<Pet> Pets
		{
			get
			{
				return this._Pets;
			}
			set
			{
				this._Pets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Order_ID;
		
		private string _Customer_ID;
		
		private string _Staff_ID;
		
		private string _Order_Desc;
		
		private System.Nullable<System.DateTime> _Order_Date;
		
		private string _Order_Status;
		
		private string _Pet_ID;
		
		private string _Supplies_ID;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Pet> _Pet;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<PetSupply> _PetSupply;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_IDChanging(string value);
    partial void OnOrder_IDChanged();
    partial void OnCustomer_IDChanging(string value);
    partial void OnCustomer_IDChanged();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnOrder_DescChanging(string value);
    partial void OnOrder_DescChanged();
    partial void OnOrder_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrder_DateChanged();
    partial void OnOrder_StatusChanging(string value);
    partial void OnOrder_StatusChanged();
    partial void OnPet_IDChanging(string value);
    partial void OnPet_IDChanged();
    partial void OnSupplies_IDChanging(string value);
    partial void OnSupplies_IDChanged();
    #endregion
		
		public Order()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Customer = default(EntityRef<Customer>);
			this._Pet = default(EntityRef<Pet>);
			this._Staff = default(EntityRef<Staff>);
			this._PetSupply = default(EntityRef<PetSupply>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="VarChar(255)")]
		public string Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="VarChar(255)")]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Desc", DbType="VarChar(MAX)")]
		public string Order_Desc
		{
			get
			{
				return this._Order_Desc;
			}
			set
			{
				if ((this._Order_Desc != value))
				{
					this.OnOrder_DescChanging(value);
					this.SendPropertyChanging();
					this._Order_Desc = value;
					this.SendPropertyChanged("Order_Desc");
					this.OnOrder_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Order_Date
		{
			get
			{
				return this._Order_Date;
			}
			set
			{
				if ((this._Order_Date != value))
				{
					this.OnOrder_DateChanging(value);
					this.SendPropertyChanging();
					this._Order_Date = value;
					this.SendPropertyChanged("Order_Date");
					this.OnOrder_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status", DbType="VarChar(255)")]
		public string Order_Status
		{
			get
			{
				return this._Order_Status;
			}
			set
			{
				if ((this._Order_Status != value))
				{
					this.OnOrder_StatusChanging(value);
					this.SendPropertyChanging();
					this._Order_Status = value;
					this.SendPropertyChanged("Order_Status");
					this.OnOrder_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_ID", DbType="VarChar(255)")]
		public string Pet_ID
		{
			get
			{
				return this._Pet_ID;
			}
			set
			{
				if ((this._Pet_ID != value))
				{
					if (this._Pet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPet_IDChanging(value);
					this.SendPropertyChanging();
					this._Pet_ID = value;
					this.SendPropertyChanged("Pet_ID");
					this.OnPet_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplies_ID", DbType="VarChar(255)")]
		public string Supplies_ID
		{
			get
			{
				return this._Supplies_ID;
			}
			set
			{
				if ((this._Supplies_ID != value))
				{
					if (this._PetSupply.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplies_IDChanging(value);
					this.SendPropertyChanging();
					this._Supplies_ID = value;
					this.SendPropertyChanged("Supplies_ID");
					this.OnSupplies_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Payment", Storage="_Payments", ThisKey="Order_ID", OtherKey="Order_ID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="Customer_ID", OtherKey="Customer_ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._Customer_ID = value.Customer_ID;
					}
					else
					{
						this._Customer_ID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Order", Storage="_Pet", ThisKey="Pet_ID", OtherKey="Pet_ID", IsForeignKey=true)]
		public Pet Pet
		{
			get
			{
				return this._Pet.Entity;
			}
			set
			{
				Pet previousValue = this._Pet.Entity;
				if (((previousValue != value) 
							|| (this._Pet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pet.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Pet.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._Pet_ID = value.Pet_ID;
					}
					else
					{
						this._Pet_ID = default(string);
					}
					this.SendPropertyChanged("Pet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Order", Storage="_Staff", ThisKey="Staff_ID", OtherKey="Staff_ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._Staff_ID = value.Staff_ID;
					}
					else
					{
						this._Staff_ID = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PetSupply_Order", Storage="_PetSupply", ThisKey="Supplies_ID", OtherKey="Supplies_ID", IsForeignKey=true)]
		public PetSupply PetSupply
		{
			get
			{
				return this._PetSupply.Entity;
			}
			set
			{
				PetSupply previousValue = this._PetSupply.Entity;
				if (((previousValue != value) 
							|| (this._PetSupply.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PetSupply.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._PetSupply.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._Supplies_ID = value.Supplies_ID;
					}
					else
					{
						this._Supplies_ID = default(string);
					}
					this.SendPropertyChanged("PetSupply");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pet")]
	public partial class Pet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Pet_ID;
		
		private string _Pet_Name;
		
		private string _Pet_Type;
		
		private string _Pet_Breed;
		
		private System.DateTime _Pet_BirthDate;
		
		private string _Pet_Gender;
		
		private string _AdoptionStatus_ID;
		
		private string _Customer_ID;
		
		private string _Vaccination_Status;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<AdoptionStatus> _AdoptionStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPet_IDChanging(string value);
    partial void OnPet_IDChanged();
    partial void OnPet_NameChanging(string value);
    partial void OnPet_NameChanged();
    partial void OnPet_TypeChanging(string value);
    partial void OnPet_TypeChanged();
    partial void OnPet_BreedChanging(string value);
    partial void OnPet_BreedChanged();
    partial void OnPet_BirthDateChanging(System.DateTime value);
    partial void OnPet_BirthDateChanged();
    partial void OnPet_GenderChanging(string value);
    partial void OnPet_GenderChanged();
    partial void OnAdoptionStatus_IDChanging(string value);
    partial void OnAdoptionStatus_IDChanged();
    partial void OnCustomer_IDChanging(string value);
    partial void OnCustomer_IDChanged();
    partial void OnVaccination_StatusChanging(string value);
    partial void OnVaccination_StatusChanged();
    #endregion
		
		public Pet()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Customer = default(EntityRef<Customer>);
			this._AdoptionStatus = default(EntityRef<AdoptionStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Pet_ID
		{
			get
			{
				return this._Pet_ID;
			}
			set
			{
				if ((this._Pet_ID != value))
				{
					this.OnPet_IDChanging(value);
					this.SendPropertyChanging();
					this._Pet_ID = value;
					this.SendPropertyChanged("Pet_ID");
					this.OnPet_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Pet_Name
		{
			get
			{
				return this._Pet_Name;
			}
			set
			{
				if ((this._Pet_Name != value))
				{
					this.OnPet_NameChanging(value);
					this.SendPropertyChanging();
					this._Pet_Name = value;
					this.SendPropertyChanged("Pet_Name");
					this.OnPet_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_Type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Pet_Type
		{
			get
			{
				return this._Pet_Type;
			}
			set
			{
				if ((this._Pet_Type != value))
				{
					this.OnPet_TypeChanging(value);
					this.SendPropertyChanging();
					this._Pet_Type = value;
					this.SendPropertyChanged("Pet_Type");
					this.OnPet_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_Breed", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Pet_Breed
		{
			get
			{
				return this._Pet_Breed;
			}
			set
			{
				if ((this._Pet_Breed != value))
				{
					this.OnPet_BreedChanging(value);
					this.SendPropertyChanging();
					this._Pet_Breed = value;
					this.SendPropertyChanged("Pet_Breed");
					this.OnPet_BreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_BirthDate", DbType="Date NOT NULL")]
		public System.DateTime Pet_BirthDate
		{
			get
			{
				return this._Pet_BirthDate;
			}
			set
			{
				if ((this._Pet_BirthDate != value))
				{
					this.OnPet_BirthDateChanging(value);
					this.SendPropertyChanging();
					this._Pet_BirthDate = value;
					this.SendPropertyChanged("Pet_BirthDate");
					this.OnPet_BirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pet_Gender", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Pet_Gender
		{
			get
			{
				return this._Pet_Gender;
			}
			set
			{
				if ((this._Pet_Gender != value))
				{
					this.OnPet_GenderChanging(value);
					this.SendPropertyChanging();
					this._Pet_Gender = value;
					this.SendPropertyChanged("Pet_Gender");
					this.OnPet_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdoptionStatus_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AdoptionStatus_ID
		{
			get
			{
				return this._AdoptionStatus_ID;
			}
			set
			{
				if ((this._AdoptionStatus_ID != value))
				{
					if (this._AdoptionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdoptionStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._AdoptionStatus_ID = value;
					this.SendPropertyChanged("AdoptionStatus_ID");
					this.OnAdoptionStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="VarChar(255)")]
		public string Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vaccination_Status", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Vaccination_Status
		{
			get
			{
				return this._Vaccination_Status;
			}
			set
			{
				if ((this._Vaccination_Status != value))
				{
					this.OnVaccination_StatusChanging(value);
					this.SendPropertyChanging();
					this._Vaccination_Status = value;
					this.SendPropertyChanged("Vaccination_Status");
					this.OnVaccination_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pet_Order", Storage="_Orders", ThisKey="Pet_ID", OtherKey="Pet_ID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Pet", Storage="_Customer", ThisKey="Customer_ID", OtherKey="Customer_ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Pets.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Pets.Add(this);
						this._Customer_ID = value.Customer_ID;
					}
					else
					{
						this._Customer_ID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdoptionStatus_Pet", Storage="_AdoptionStatus", ThisKey="AdoptionStatus_ID", OtherKey="AdoptionStatus_ID", IsForeignKey=true)]
		public AdoptionStatus AdoptionStatus
		{
			get
			{
				return this._AdoptionStatus.Entity;
			}
			set
			{
				AdoptionStatus previousValue = this._AdoptionStatus.Entity;
				if (((previousValue != value) 
							|| (this._AdoptionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdoptionStatus.Entity = null;
						previousValue.Pets.Remove(this);
					}
					this._AdoptionStatus.Entity = value;
					if ((value != null))
					{
						value.Pets.Add(this);
						this._AdoptionStatus_ID = value.AdoptionStatus_ID;
					}
					else
					{
						this._AdoptionStatus_ID = default(string);
					}
					this.SendPropertyChanged("AdoptionStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Pet = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Pet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Staff_ID;
		
		private string _Staff_Name;
		
		private string _Staff_Username;
		
		private string _Staff_Password;
		
		private string _Staff_Status;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnStaff_NameChanging(string value);
    partial void OnStaff_NameChanged();
    partial void OnStaff_UsernameChanging(string value);
    partial void OnStaff_UsernameChanged();
    partial void OnStaff_PasswordChanging(string value);
    partial void OnStaff_PasswordChanged();
    partial void OnStaff_StatusChanging(string value);
    partial void OnStaff_StatusChanged();
    #endregion
		
		public Staff()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Staff_Name
		{
			get
			{
				return this._Staff_Name;
			}
			set
			{
				if ((this._Staff_Name != value))
				{
					this.OnStaff_NameChanging(value);
					this.SendPropertyChanging();
					this._Staff_Name = value;
					this.SendPropertyChanged("Staff_Name");
					this.OnStaff_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Username", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Staff_Username
		{
			get
			{
				return this._Staff_Username;
			}
			set
			{
				if ((this._Staff_Username != value))
				{
					this.OnStaff_UsernameChanging(value);
					this.SendPropertyChanging();
					this._Staff_Username = value;
					this.SendPropertyChanged("Staff_Username");
					this.OnStaff_UsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Staff_Password
		{
			get
			{
				return this._Staff_Password;
			}
			set
			{
				if ((this._Staff_Password != value))
				{
					this.OnStaff_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Staff_Password = value;
					this.SendPropertyChanged("Staff_Password");
					this.OnStaff_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Status", DbType="VarChar(255)")]
		public string Staff_Status
		{
			get
			{
				return this._Staff_Status;
			}
			set
			{
				if ((this._Staff_Status != value))
				{
					this.OnStaff_StatusChanging(value);
					this.SendPropertyChanging();
					this._Staff_Status = value;
					this.SendPropertyChanged("Staff_Status");
					this.OnStaff_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Order", Storage="_Orders", ThisKey="Staff_ID", OtherKey="Staff_ID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockSupplies")]
	public partial class StockSupply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Stock_ID;
		
		private string _Supplies_ID;
		
		private int _Stock_Quantity;
		
		private EntityRef<PetSupply> _PetSupply;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStock_IDChanging(string value);
    partial void OnStock_IDChanged();
    partial void OnSupplies_IDChanging(string value);
    partial void OnSupplies_IDChanged();
    partial void OnStock_QuantityChanging(int value);
    partial void OnStock_QuantityChanged();
    #endregion
		
		public StockSupply()
		{
			this._PetSupply = default(EntityRef<PetSupply>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Stock_ID
		{
			get
			{
				return this._Stock_ID;
			}
			set
			{
				if ((this._Stock_ID != value))
				{
					this.OnStock_IDChanging(value);
					this.SendPropertyChanging();
					this._Stock_ID = value;
					this.SendPropertyChanged("Stock_ID");
					this.OnStock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplies_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Supplies_ID
		{
			get
			{
				return this._Supplies_ID;
			}
			set
			{
				if ((this._Supplies_ID != value))
				{
					if (this._PetSupply.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplies_IDChanging(value);
					this.SendPropertyChanging();
					this._Supplies_ID = value;
					this.SendPropertyChanged("Supplies_ID");
					this.OnSupplies_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_Quantity", DbType="Int NOT NULL")]
		public int Stock_Quantity
		{
			get
			{
				return this._Stock_Quantity;
			}
			set
			{
				if ((this._Stock_Quantity != value))
				{
					this.OnStock_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Stock_Quantity = value;
					this.SendPropertyChanged("Stock_Quantity");
					this.OnStock_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PetSupply_StockSupply", Storage="_PetSupply", ThisKey="Supplies_ID", OtherKey="Supplies_ID", IsForeignKey=true)]
		public PetSupply PetSupply
		{
			get
			{
				return this._PetSupply.Entity;
			}
			set
			{
				PetSupply previousValue = this._PetSupply.Entity;
				if (((previousValue != value) 
							|| (this._PetSupply.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PetSupply.Entity = null;
						previousValue.StockSupplies.Remove(this);
					}
					this._PetSupply.Entity = value;
					if ((value != null))
					{
						value.StockSupplies.Add(this);
						this._Supplies_ID = value.Supplies_ID;
					}
					else
					{
						this._Supplies_ID = default(string);
					}
					this.SendPropertyChanged("PetSupply");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PetSupplies")]
	public partial class PetSupply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Supplies_ID;
		
		private string _Supplies_Name;
		
		private string _Supply_Category;
		
		private decimal _Price;
		
		private string _Stock_ID;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<StockSupply> _StockSupplies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplies_IDChanging(string value);
    partial void OnSupplies_IDChanged();
    partial void OnSupplies_NameChanging(string value);
    partial void OnSupplies_NameChanged();
    partial void OnSupply_CategoryChanging(string value);
    partial void OnSupply_CategoryChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnStock_IDChanging(string value);
    partial void OnStock_IDChanged();
    #endregion
		
		public PetSupply()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._StockSupplies = new EntitySet<StockSupply>(new Action<StockSupply>(this.attach_StockSupplies), new Action<StockSupply>(this.detach_StockSupplies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplies_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Supplies_ID
		{
			get
			{
				return this._Supplies_ID;
			}
			set
			{
				if ((this._Supplies_ID != value))
				{
					this.OnSupplies_IDChanging(value);
					this.SendPropertyChanging();
					this._Supplies_ID = value;
					this.SendPropertyChanged("Supplies_ID");
					this.OnSupplies_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplies_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Supplies_Name
		{
			get
			{
				return this._Supplies_Name;
			}
			set
			{
				if ((this._Supplies_Name != value))
				{
					this.OnSupplies_NameChanging(value);
					this.SendPropertyChanging();
					this._Supplies_Name = value;
					this.SendPropertyChanged("Supplies_Name");
					this.OnSupplies_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supply_Category", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Supply_Category
		{
			get
			{
				return this._Supply_Category;
			}
			set
			{
				if ((this._Supply_Category != value))
				{
					this.OnSupply_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Supply_Category = value;
					this.SendPropertyChanged("Supply_Category");
					this.OnSupply_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Stock_ID
		{
			get
			{
				return this._Stock_ID;
			}
			set
			{
				if ((this._Stock_ID != value))
				{
					this.OnStock_IDChanging(value);
					this.SendPropertyChanging();
					this._Stock_ID = value;
					this.SendPropertyChanged("Stock_ID");
					this.OnStock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PetSupply_Order", Storage="_Orders", ThisKey="Supplies_ID", OtherKey="Supplies_ID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PetSupply_StockSupply", Storage="_StockSupplies", ThisKey="Supplies_ID", OtherKey="Supplies_ID")]
		public EntitySet<StockSupply> StockSupplies
		{
			get
			{
				return this._StockSupplies;
			}
			set
			{
				this._StockSupplies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.PetSupply = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.PetSupply = null;
		}
		
		private void attach_StockSupplies(StockSupply entity)
		{
			this.SendPropertyChanging();
			entity.PetSupply = this;
		}
		
		private void detach_StockSupplies(StockSupply entity)
		{
			this.SendPropertyChanging();
			entity.PetSupply = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Payment_ID;
		
		private string _Order_ID;
		
		private System.Nullable<decimal> _Total_Amount;
		
		private System.Nullable<decimal> _Payment_Amount;
		
		private System.Nullable<decimal> _Payment_Change;
		
		private System.DateTime _Payment_Date;
		
		private string _Payment_Method;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_IDChanging(string value);
    partial void OnPayment_IDChanged();
    partial void OnOrder_IDChanging(string value);
    partial void OnOrder_IDChanged();
    partial void OnTotal_AmountChanging(System.Nullable<decimal> value);
    partial void OnTotal_AmountChanged();
    partial void OnPayment_AmountChanging(System.Nullable<decimal> value);
    partial void OnPayment_AmountChanged();
    partial void OnPayment_ChangeChanging(System.Nullable<decimal> value);
    partial void OnPayment_ChangeChanged();
    partial void OnPayment_DateChanging(System.DateTime value);
    partial void OnPayment_DateChanged();
    partial void OnPayment_MethodChanging(string value);
    partial void OnPayment_MethodChanged();
    #endregion
		
		public Payment()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Payment_ID
		{
			get
			{
				return this._Payment_ID;
			}
			set
			{
				if ((this._Payment_ID != value))
				{
					this.OnPayment_IDChanging(value);
					this.SendPropertyChanging();
					this._Payment_ID = value;
					this.SendPropertyChanged("Payment_ID");
					this.OnPayment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="VarChar(255)")]
		public string Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Total_Amount
		{
			get
			{
				return this._Total_Amount;
			}
			set
			{
				if ((this._Total_Amount != value))
				{
					this.OnTotal_AmountChanging(value);
					this.SendPropertyChanging();
					this._Total_Amount = value;
					this.SendPropertyChanged("Total_Amount");
					this.OnTotal_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Payment_Amount
		{
			get
			{
				return this._Payment_Amount;
			}
			set
			{
				if ((this._Payment_Amount != value))
				{
					this.OnPayment_AmountChanging(value);
					this.SendPropertyChanging();
					this._Payment_Amount = value;
					this.SendPropertyChanged("Payment_Amount");
					this.OnPayment_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Change", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Payment_Change
		{
			get
			{
				return this._Payment_Change;
			}
			set
			{
				if ((this._Payment_Change != value))
				{
					this.OnPayment_ChangeChanging(value);
					this.SendPropertyChanging();
					this._Payment_Change = value;
					this.SendPropertyChanged("Payment_Change");
					this.OnPayment_ChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Date", DbType="Date NOT NULL")]
		public System.DateTime Payment_Date
		{
			get
			{
				return this._Payment_Date;
			}
			set
			{
				if ((this._Payment_Date != value))
				{
					this.OnPayment_DateChanging(value);
					this.SendPropertyChanging();
					this._Payment_Date = value;
					this.SendPropertyChanged("Payment_Date");
					this.OnPayment_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Method", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Payment_Method
		{
			get
			{
				return this._Payment_Method;
			}
			set
			{
				if ((this._Payment_Method != value))
				{
					this.OnPayment_MethodChanging(value);
					this.SendPropertyChanging();
					this._Payment_Method = value;
					this.SendPropertyChanged("Payment_Method");
					this.OnPayment_MethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Payment", Storage="_Order", ThisKey="Order_ID", OtherKey="Order_ID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Order_ID = value.Order_ID;
					}
					else
					{
						this._Order_ID = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
